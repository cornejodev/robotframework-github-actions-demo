name: Robot Framework Reporter Demo

on:
  push:
    branches:
      - main
      - dev
      - release/**
      - hotfix/**
  pull_request:
    branches:
      - main
      - dev

jobs:
  tests:
    if: "github.event_name == 'pull_request' && (github.head_ref == 'main' || github.head_ref == 'dev')"
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        uses: joonvena/robotframework-docker-action@v1.0
        with:
          robot_tests_dir: tests
      - name: Store test report
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports
          path: reports

  generate_report:
    if: always()
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download reports
        uses: actions/download-artifact@v1
        with:
          name: reports
      - name: Send report to commit
        uses: joonvena/robotframework-reporter-action@v2.3
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}

  merge_release_to_main:
    if: "github.event_name == 'pull_request' && github.head_ref == 'release/*'"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v2
        with:
          ref: release
      - name: Merge release to main
        run: |
          git checkout main
          git merge --no-ff release -m "Merge release to main"
          git push origin main

  merge_hotfix_to_main:
    if: "github.event_name == 'pull_request' && github.head_ref == 'hotfix/*'"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout hotfix branch
        uses: actions/checkout@v2
      - name: Merge hotfix to main
        run: |
          git checkout main
          git merge --no-ff ${{ github.ref }} -m "Merge hotfix to main"
          git push origin main

  create_dev_branch:
    if: "github.event_name == 'repository_dispatch'"
    runs-on: ubuntu-latest
    steps:
      - name: Create dev branch
        run: |
          git checkout -b dev
          git push origin dev

  handle_task_and_bugfix:
    if: "github.event_name == 'pull_request' && (github.head_ref == 'task/*' || github.head_ref == 'bugfix/*')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Merge branch to dev
        run: |
          git checkout dev
          git merge --no-ff ${{ github.ref }} -m "Merge branch to dev"
          git push origin dev
          #comment

